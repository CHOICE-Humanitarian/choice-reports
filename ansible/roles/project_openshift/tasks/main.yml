---
# Label: project_openshift_tasks
# Title: create the Ansible tasks for deploying the application to OpenShift
# Mission: create the Ansible tasks for deploying the application to OpenShift
# Milestone: Automate Project Deployment
# Column: Automate Project Deployment

- name: Upload template configmap
  shell: "oc login {{PROJECT_HOST}} --token={{PROJECT_TOKEN}} && oc create configmap choice-reports-template --from-file=/usr/local/src/choice-reports-static/template/ --dry-run -o yaml -n {{PROJECT_NAMESPACE}} | oc apply -n {{PROJECT_NAMESPACE}} -f -"
  ignore_errors: true

- name: Install choice-reports image stream on OpenShift
  k8s:
    state: present
    name: choice-reports
    host: "{{PROJECT_HOST}}"
    api_key: "{{PROJECT_TOKEN}}"
    namespace: "{{PROJECT_NAMESPACE}}"
    definition: "{{ lookup('template', 'project_image_stream.yml') }}"
    validate_certs: false
- name: Install choice-reports secret on OpenShift
  k8s:
    state: present
    name: choice-reports-secret
    host: "{{PROJECT_HOST}}"
    api_key: "{{PROJECT_TOKEN}}"
    namespace: "{{PROJECT_NAMESPACE}}"
    definition: "{{ lookup('template', 'project_secret.yml') }}"
    validate_certs: false
- name: Install choice-reports keystore secrets on OpenShift
  k8s:
    state: present
    name: choice-reports-keystore
    host: "{{PROJECT_HOST}}"
    api_key: "{{PROJECT_TOKEN}}"
    namespace: "{{PROJECT_NAMESPACE}}"
    definition: "{{ lookup('template', 'project_keystore.yml') }}"
    validate_certs: false
- name: Install choice-reports build config on OpenShift
  k8s:
    state: present
    name: choice-reports
    host: "{{PROJECT_HOST}}"
    api_key: "{{PROJECT_TOKEN}}"
    namespace: "{{PROJECT_NAMESPACE}}"
    definition: "{{ lookup('template', 'project_build_config.yml') }}"
    validate_certs: false
- name: Install choice-reports deployment config on OpenShift
  k8s:
    state: present
    name: choice-reports
    host: "{{PROJECT_HOST}}"
    api_key: "{{PROJECT_TOKEN}}"
    namespace: "{{PROJECT_NAMESPACE}}"
    definition: "{{ lookup('template', 'project_deployment_config.yml') }}"
    validate_certs: false
- name: Install choice-reports service on OpenShift
  k8s:
    state: present
    name: choice-reports
    host: "{{PROJECT_HOST}}"
    api_key: "{{PROJECT_TOKEN}}"
    namespace: "{{PROJECT_NAMESPACE}}"
    definition: "{{ lookup('template', 'project_service.yml') }}"
    validate_certs: false
- name: Install choice-reports route on OpenShift
  k8s:
    state: present
    name: choice-reports
    host: "{{PROJECT_HOST}}"
    api_key: "{{PROJECT_TOKEN}}"
    namespace: "{{PROJECT_NAMESPACE}}"
    definition: "{{ lookup('template', 'project_route.yml') }}"
    validate_certs: false
- name: Create Solr collection
  shell: "oc login {{PROJECT_HOST}} --token={{REDHAT_OPENSHIFT_TOKEN}} && oc exec $(oc get pod -l app=solr -o jsonpath='{.items[0].metadata.name}' -n {{ SOLR_NAMESPACE }}) -n {{ SOLR_NAMESPACE }} -- /opt/solr/bin/solr create_collection -c {{ PROJECT_SOLR_COLLECTION }} -n computate || true"
  register: create_collection
- name: Print create_collection command
  debug:
    var: create_collection
