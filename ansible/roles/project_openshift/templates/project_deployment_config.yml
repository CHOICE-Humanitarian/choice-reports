---
# Label: ansible_project_deployment_config
# Title: create the Ansible template for the project deployment config in OpenShift
# Mission: create the Ansible template for the project deployment config in OpenShift
# Milestone: Automate Project Deployment
# Column: Automate Project Deployment

apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
spec:
  replicas: 1
  selector:
    app: "{{ SITE_NAME }}"
    deploymentconfig: "{{ SITE_NAME }}"
  template:
    metadata:
      labels:
        app: "{{ SITE_NAME }}"
        deploymentconfig: "{{ SITE_NAME }}"
    spec:
      containers:
        - imagePullPolicy: Always
          name: "{{ SITE_NAME }}"
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
            - containerPort: 8081
              name: cluster
              protocol: TCP
            - containerPort: 9779
              name: prometheus
              protocol: TCP
            - containerPort: 8778
              name: jolokia
              protocol: TCP
          resources:
            limits:
              memory: 1Gi
          volumeMounts:
            - mountPath: /opt/keystore
              name: volume-keystore
              readOnly: true
            - mountPath: /opt/static/template
              name: volume-template
              readOnly: true
          env:
            - name: AUTH_REALM
              valueFrom:
                secretKeyRef:
                  key: AUTH_REALM
                  name: "{{ SITE_NAME }}-secret"
            - name: AUTH_RESOURCE
              valueFrom:
                secretKeyRef:
                  key: AUTH_RESOURCE
                  name: "{{ SITE_NAME }}-secret"
            - name: AUTH_SECRET
              valueFrom:
                secretKeyRef:
                  key: AUTH_SECRET
                  name: "{{ SITE_NAME }}-secret"
            - name: AUTH_HOST_NAME
              valueFrom:
                secretKeyRef:
                  key: AUTH_HOST_NAME
                  name: "{{ SITE_NAME }}-secret"
            - name: AUTH_PORT
              valueFrom:
                secretKeyRef:
                  key: AUTH_PORT
                  name: "{{ SITE_NAME }}-secret"
            - name: AUTH_SSL
              valueFrom:
                secretKeyRef:
                  key: AUTH_SSL
                  name: "{{ SITE_NAME }}-secret"
            - name: AUTH_TOKEN_URI
              value: "{{ AUTH_TOKEN_URI }}"
            - name: EMAIL_AUTH
              valueFrom:
                secretKeyRef:
                  key: EMAIL_AUTH
                  name: "{{ SITE_NAME }}-secret"
            - name: EMAIL_FROM
              valueFrom:
                secretKeyRef:
                  key: EMAIL_FROM
                  name: "{{ SITE_NAME }}-secret"
            - name: EMAIL_HOST
              valueFrom:
                secretKeyRef:
                  key: EMAIL_HOST
                  name: "{{ SITE_NAME }}-secret"
            - name: EMAIL_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: EMAIL_PASSWORD
                  name: "{{ SITE_NAME }}-secret"
            - name: EMAIL_PORT
              valueFrom:
                secretKeyRef:
                  key: EMAIL_PORT
                  name: "{{ SITE_NAME }}-secret"
            - name: EMAIL_SSL
              valueFrom:
                secretKeyRef:
                  key: EMAIL_SSL
                  name: "{{ SITE_NAME }}-secret"
            - name: EMAIL_USERNAME
              valueFrom:
                secretKeyRef:
                  key: EMAIL_USERNAME
                  name: "{{ SITE_NAME }}-secret"
            - name: JDBC_HOST
              valueFrom:
                secretKeyRef:
                  key: JDBC_HOST
                  name: "{{ SITE_NAME }}-secret"
            - name: JDBC_PORT
              valueFrom:
                secretKeyRef:
                  key: JDBC_PORT
                  name: "{{ SITE_NAME }}-secret"
            - name: JDBC_DATABASE
              valueFrom:
                secretKeyRef:
                  key: JDBC_DATABASE
                  name: "{{ SITE_NAME }}-secret"
            - name: JDBC_USERNAME
              valueFrom:
                secretKeyRef:
                  key: JDBC_USERNAME
                  name: "{{ SITE_NAME }}-secret"
            - name: JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: JDBC_PASSWORD
                  name: "{{ SITE_NAME }}-secret"
            - name: SSL_PASSTHROUGH
              valueFrom:
                secretKeyRef:
                  key: SSL_PASSTHROUGH
                  name: "{{ SITE_NAME }}-secret"
            - name: SSL_ALIAS
              valueFrom:
                secretKeyRef:
                  key: SSL_ALIAS
                  name: "{{ SITE_NAME }}-secret"
            - name: SSL_JKS_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: SSL_JKS_PASSWORD
                  name: "{{ SITE_NAME }}-secret"
            - name: SSL_JKS_PATH
              valueFrom:
                secretKeyRef:
                  key: SSL_JKS_PATH
                  name: "{{ SITE_NAME }}-secret"
            - name: SSL_KEYSTORE_PATH
              valueFrom:
                secretKeyRef:
                  key: SSL_KEYSTORE_PATH
                  name: "{{ SITE_NAME }}-secret"
            - name: OPENSHIFT_SERVICE
              value: "{{ SITE_NAME }}"
            - name: CLUSTER_PORT
              value: "8081"
            - name: ZOOKEEPER_HOST_NAME
              value: "{{ ZOOKEEPER_HOST_NAME }}"
            - name: ZOOKEEPER_PORT
              value: "{{ ZOOKEEPER_PORT }}"
            - name: SOLR_HOST_NAME
              value: "{{ SOLR_HOST_NAME }}"
            - name: SOLR_PORT
              value: "{{ SOLR_PORT }}"
            - name: SOLR_URL
              value: "http://{{ SOLR_HOST_NAME }}:{{ SOLR_PORT }}/solr/{{ SITE_SOLR_COLLECTION }}"
            - name: SITE_HOST_NAME
              value: "{{ SITE_HOST_NAME_ENUS }}"
            - name: SITE_PORT
              value: "{{ SITE_PORT }}"
            - name: SITE_BASE_URL
              value: "{{ SITE_BASE_URL_ENUS }}"
            - name: NUMBER_EXECUTORS
              value: "{{ SITE_NUMBER_EXECUTORS }}"
            - name: STATIC_BASE_URL
              value: "{{ SITE_STATIC_BASE_URL }}"
            - name: STATIC_PATH
              value: "{{ SITE_STATIC_PATH }}"
            - name: SITE_ZONE
              value: "{{ SITE_ZONE_ENUS }}"
            - name: JAVA_MAIN_CLASS
              value: "{{ SITE_JAVA_MAIN_CLASS_ENUS }}"
      volumes:
        - name: volume-keystore
          secret:
            defaultMode: 420
            secretName: "{{ SITE_NAME }}-keystore"
        - name: volume-template
          configMap:
            defaultMode: 420
            name: "{{ SITE_NAME }}-template"
  triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
          - {{ SITE_NAME }}
        from:
          kind: ImageStreamTag
          name: '{{ SITE_NAME }}:latest'
          namespace: "{{ SITE_NAMESPACE }}"
      type: ImageChange
    - type: ConfigChange
